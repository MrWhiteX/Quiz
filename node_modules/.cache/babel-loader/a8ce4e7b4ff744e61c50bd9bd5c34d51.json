{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  questions: [],\n  loading: false,\n  gameOver: true,\n  difficultyLevel: 'easy'\n};\nexport const toDoQuiz = createSlice({\n  name: 'quiz',\n  initialState,\n  reducers: {\n    addQuestions: (state, action) => {\n      state.questions = action.payload;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setGameOver: (state, action) => {\n      state.gameOver = action.payload;\n    },\n    setDifficultyLevel: (state, action) => {\n      state.difficultyLevel = action.payload;\n    } // setTodos(todos.map((todo) => (todo.id === id ? { ...todo, todo: editTodo } : todo)));\n    // incrementByAmount: (state, action: PayloadAction<number>) => {\n    //     state.value += action.payload;\n    // },\n\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addQuestions,\n  setLoading,\n  setGameOver,\n  setDifficultyLevel\n} = toDoQuiz.actions;\nexport const getQuestion = state => state.quiz.questions;\nexport const getLoading = state => state.quiz.loading;\nexport const getGameOver = state => state.quiz.gameOver;\nexport const getDifficultyLevel = state => state.quiz.difficultyLevel;\nexport default toDoQuiz.reducer;","map":{"version":3,"sources":["/home/bartek/Pulpit/nowy katalog 2/src/store/toDoQuiz.ts"],"names":["createSlice","initialState","questions","loading","gameOver","difficultyLevel","toDoQuiz","name","reducers","addQuestions","state","action","payload","setLoading","setGameOver","setDifficultyLevel","actions","getQuestion","quiz","getLoading","getGameOver","getDifficultyLevel","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAWA,MAAMC,YAAoB,GAAG;AACzBC,EAAAA,SAAS,EAAE,EADc;AAEzBC,EAAAA,OAAO,EAAE,KAFgB;AAGzBC,EAAAA,QAAQ,EAAE,IAHe;AAIzBC,EAAAA,eAAe,EAAE;AAJQ,CAA7B;AAOA,OAAO,MAAMC,QAAQ,GAAGN,WAAW,CAAC;AAChCO,EAAAA,IAAI,EAAE,MAD0B;AAEhCN,EAAAA,YAFgC;AAGhCO,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAoD;AAC9DD,MAAAA,KAAK,CAACR,SAAN,GAAkBS,MAAM,CAACC,OAAzB;AACH,KAHK;AAINC,IAAAA,UAAU,EAAE,CAACH,KAAD,EAAQC,MAAR,KAA2C;AACnDD,MAAAA,KAAK,CAACP,OAAN,GAAgBQ,MAAM,CAACC,OAAvB;AACH,KANK;AAONE,IAAAA,WAAW,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAA2C;AACpDD,MAAAA,KAAK,CAACN,QAAN,GAAiBO,MAAM,CAACC,OAAxB;AACH,KATK;AAUNG,IAAAA,kBAAkB,EAAE,CAACL,KAAD,EAAQC,MAAR,KAA0C;AAC1DD,MAAAA,KAAK,CAACL,eAAN,GAAwBM,MAAM,CAACC,OAA/B;AACH,KAZK,CAcN;AACA;AACA;AACA;;AAjBM;AAHsB,CAAD,CAA5B,C,CAwBP;;AACA,OAAO,MAAM;AAAEH,EAAAA,YAAF;AAAgBI,EAAAA,UAAhB;AAA4BC,EAAAA,WAA5B;AAAyCC,EAAAA;AAAzC,IAAgET,QAAQ,CAACU,OAA/E;AAEP,OAAO,MAAMC,WAAW,GAAIP,KAAD,IAAsBA,KAAK,CAACQ,IAAN,CAAWhB,SAArD;AACP,OAAO,MAAMiB,UAAU,GAAIT,KAAD,IAAsBA,KAAK,CAACQ,IAAN,CAAWf,OAApD;AACP,OAAO,MAAMiB,WAAW,GAAIV,KAAD,IAAsBA,KAAK,CAACQ,IAAN,CAAWd,QAArD;AACP,OAAO,MAAMiB,kBAAkB,GAAIX,KAAD,IAAsBA,KAAK,CAACQ,IAAN,CAAWb,eAA5D;AAEP,eAAeC,QAAQ,CAACgB,OAAxB","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from './store';\nimport { QuestionsState } from '../API';\n\ninterface IState {\n    questions: Array<QuestionsState>;\n    loading: boolean;\n    gameOver: boolean;\n    difficultyLevel: string;\n}\n\nconst initialState: IState = {\n    questions: [],\n    loading: false,\n    gameOver: true,\n    difficultyLevel: 'easy',\n};\n\nexport const toDoQuiz = createSlice({\n    name: 'quiz',\n    initialState,\n    reducers: {\n        addQuestions: (state, action: PayloadAction<QuestionsState[]>) => {\n            state.questions = action.payload;\n        },\n        setLoading: (state, action: PayloadAction<boolean>) => {\n            state.loading = action.payload;\n        },\n        setGameOver: (state, action: PayloadAction<boolean>) => {\n            state.gameOver = action.payload;\n        },\n        setDifficultyLevel: (state, action: PayloadAction<string>) => {\n            state.difficultyLevel = action.payload;\n        },\n\n        // setTodos(todos.map((todo) => (todo.id === id ? { ...todo, todo: editTodo } : todo)));\n        // incrementByAmount: (state, action: PayloadAction<number>) => {\n        //     state.value += action.payload;\n        // },\n    },\n});\n\n// Action creators are generated for each case reducer function\nexport const { addQuestions, setLoading, setGameOver, setDifficultyLevel } = toDoQuiz.actions;\n\nexport const getQuestion = (state: RootState) => state.quiz.questions;\nexport const getLoading = (state: RootState) => state.quiz.loading;\nexport const getGameOver = (state: RootState) => state.quiz.gameOver;\nexport const getDifficultyLevel = (state: RootState) => state.quiz.difficultyLevel;\n\nexport default toDoQuiz.reducer;\n"]},"metadata":{},"sourceType":"module"}